name: Java CI with Maven

on:
  push:
    branches: [ "master" ]

#jobs:
#  
#  frontend:
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: frontend
#    strategy:
#      matrix:
#        node-version: [ 18.x ]
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#      - run: npm ci
#      - run: npm run build
#      - run: npm test -- --watch=false --browsers=ChromeHeadless



env:
  REGISTRY: ghcr.io
  IMAGE_NAME: uberclone

jobs:
  
  #  backend:
  #    runs-on: ubuntu-latest
  #    defaults:
  #      run:
  #        working-directory: backend
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: Set up JDK 17
  #        uses: actions/setup-java@v3
  #        with:
  #          java-version: '17'
  #          distribution: 'temurin'
  #          cache: maven
  #      - name: Package with Maven
  #        run: mvn -B package --file pom.xml
  
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./frontend/Dockerfile
            context: ./frontend
            image: ghcr.io/jbonifay/uberclone-frontend
          - dockerfile: ./backend/Dockerfile
            context: ./backend
            image: ghcr.io/jbonifay/uberclone-backend
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker
        uses: docker/build-push-action@v4
        with:
          registry: ghcr.io
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ matrix.image }}