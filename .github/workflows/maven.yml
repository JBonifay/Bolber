name: Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
  
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build
      - run: npm test -- --watch=false --browsers=ChromeHeadless
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build the frontend Docker image
        run: |
          docker build . --tag ghcr.io/jbonifay/uberclone-frontend:latest
          docker push ghcr.io/jbonifay/uberclone-frontend:latest
            
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Test with Maven
        run: mvn -B package --file pom.xml
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build the backend Docker image
        run: |
          docker build . --tag ghcr.io/jbonifay/uberclone-backend:latest
          docker push ghcr.io/jbonifay/uberclone-backend:latest